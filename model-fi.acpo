ModelName=FI
Features={is_tail, float32},{is_must_tail, float32},{opt_code, float32},{is_indirect, float32},{is_in_inner_loop, float32},{caller_InitialSize, float32},{caller_Blocks, float32},{caller_Calls, float32},{caller_IsLocal, float32},{caller_IsLinkOnceODR, float32},{caller_IsLinkOnce, float32},{caller_Loops, float32},{caller_MaxLoopDepth, float32},{caller_MaxDomTreeLevel, float32},{caller_PtrArgs, float32},{caller_PtrCallee, float32},{caller_CallReturnPtr, float32},{caller_ConditionalBranch, float32},{caller_CBwithArg, float32},{caller_CallerHeight, float32},{caller_CallUsage, float32},{caller_IsRecursive, float32},{caller_NumCallsiteInLoop, float32},{caller_NumOfCallUsesInLoop, float32},{caller_EntryBlockFreq, float32},{caller_MaxCallsiteBlockFreq, float32},{caller_InstructionPerBlock, float32},{caller_SuccessorPerBlock, float32},{caller_AvgVecInstr, float32},{caller_AvgNestedLoopLevel, float32},{caller_InstrPerLoop, float32},{caller_BlockWithMultipleSuccecorsPerLoop, float32},{callee_InitialSize, float32},{callee_Blocks, float32},{callee_Calls, float32},{callee_IsLocal, float32},{callee_IsLinkOnceODR, float32},{callee_IsLinkOnce, float32},{callee_Loops, float32},{callee_MaxLoopDepth, float32},{callee_MaxDomTreeLevel, float32},{callee_PtrArgs, float32},{callee_PtrCallee, float32},{callee_CallReturnPtr, float32},{callee_ConditionalBranch, float32},{callee_CBwithArg, float32},{callee_CallerHeight, float32},{callee_CallUsage, float32},{callee_IsRecursive, float32},{callee_NumCallsiteInLoop, float32},{callee_NumOfCallUsesInLoop, float32},{callee_EntryBlockFreq, float32},{callee_MaxCallsiteBlockFreq, float32},{callee_InstructionPerBlock, float32},{callee_SuccessorPerBlock, float32},{callee_AvgVecInstr, float32},{callee_AvgNestedLoopLevel, float32},{callee_InstrPerLoop, float32},{callee_BlockWithMultipleSuccecorsPerLoop, float32},{sroa_savings, float32},{sroa_losses, float32},{load_elimination, float32},{call_penalty, float32},{call_argument_setup, float32},{load_relative_intrinsic, float32},{lowered_call_arg_setup, float32},{indirect_call_penalty, float32},{jump_table_penalty, float32},{case_cluster_penalty, float32},{switch_penalty, float32},{unsimplified_common_instructions, float32},{num_loops, float32},{dead_blocks, float32},{simplified_instructions, float32},{constant_args, float32},{constant_offset_ptr_args, float32},{callsite_cost, float32},{cold_cc_penalty, float32},{last_call_to_static_bonus, float32},{is_multiple_blocks, float32},{nested_inlines, float32},{nested_inline_cost_estimate, float32},{threshold, float32},{callsite_height, float32},{node_count, float32},{nr_ctant_params, float32},{cost_estimate, float32},{edge_count, float32},{callee_basic_block_count, float32},{callee_conditionally_executed_blocks, float32},{callee_users, float32},{loop_level, float32},{caller_basic_block_count, float32},{caller_conditionally_executed_blocks, float32},{caller_users, float32},{block_freq, float32},{cold_callsite, float32},{hot_callsite, float32},{mandatory_kind, float32},{mandatory_only, float32}
Outputs={FI-ShouldInline, int64}
Signature=serving_default
ModelDirectory=models/FI_torch/
ModelFileName=modelfi.pt
OutputKey=output_0
ModelInference=FIInference
LoadModelType=torch
# Above ModelInference need to be updated on python side
